{"version":3,"file":"component---src-pages-index-js-644450a2a846abd2789a.js","mappings":";8GAAA,OAOA,WACE,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IACvB,GAAIA,EAAID,OAAQ,CACd,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,SAGZ,GAAgB,WAAZJ,EACT,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACpC,IAAK,IAAIG,KAAOV,EACVP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAC/Bd,EAAQM,KAAKQ,QAIjBd,EAAQM,KAAKF,EAAIO,aAKvB,OAAOX,EAAQgB,KAAK,KAGeC,EAAOC,SAC1CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aA9CL,iGCLMqB,EAAgB,uBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACxF,wBAAM,YAAU,UAAU,YAAU,UAAUC,EAAE,6pCAA6pCF,KAAK,YACltC,wBAAME,EAAE,+gEAA+gEF,KAAK,YAC5hE,wBAAME,EAAE,8WAA8WF,KAAK,YAC3X,wBAAME,EAAE,y8BAAy8BF,KAAK,YACt9B,wBAAME,EAAE,07BAA07BF,KAAK,YACv8B,wBAAME,EAAE,yXAAyXF,KAAK,YACtY,wBAAME,EAAE,6nCAA6nCF,KAAK,YAC1oC,wBAAME,EAAE,49BAA49BF,KAAK,YACz+B,wBAAME,EAAE,0wCAA0wCF,KAAK,YACvxC,wBAAME,EAAE,gXAAgXF,KAAK,YAC7X,wBAAME,EAAE,wIAAwIF,KAAK,aAG/IG,EAAgB,uBAAKN,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACxF,wBAAM,YAAU,UAAU,YAAU,UAAUC,EAAE,kpCAAkpCF,KAAK,YACvsC,wBAAME,EAAE,+hEAA+hEF,KAAK,YAC5iE,wBAAME,EAAE,0WAA0WF,KAAK,YACvX,wBAAME,EAAE,w8BAAw8BF,KAAK,YACr9B,wBAAME,EAAE,u7BAAu7BF,KAAK,YACp8B,wBAAME,EAAE,yXAAyXF,KAAK,YACtY,wBAAME,EAAE,2lCAA2lCF,KAAK,YACxmC,wBAAME,EAAE,69BAA69BF,KAAK,YAC1+B,wBAAME,EAAE,0wCAA0wCF,KAAK,YACvxC,wBAAME,EAAE,gXAAgXF,KAAK,YAC7X,wBAAME,EAAE,wIAAwIF,KAAK,aAarJ,EATa,SAAC,GAAc,IAAbI,EAAY,EAAZA,OACX,OACI,uBAAKC,UAAU,gCACE,UAAXD,GAAiC,SAAXA,GAAgC,SAAXA,IAAsBR,GACtD,UAAXQ,GAAiC,SAAXA,IAAsBD,ICf1D,EAlBgB,SAAC,GAAiD,IAAhDG,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,gBACxC,OACI,uBAAKH,UAAU,eACX,uBAAKR,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAC9D,wBAAMC,EAAE,qXAAqXF,KAAK,YAClY,wBAAME,EAAE,6EAA6EF,KAAK,YAC1F,wBAAME,EAAE,2SAA2SF,KAAK,aAI5T,uBAAKK,UAAU,0BACX,qBAAGA,UAAU,qBAAqBC,GAClC,qBAAGG,OAAO,SAASC,IAAI,aAAaC,KAAMJ,EAAaF,UAAU,2BAA2BG,MCgB5G,EA5BiB,SAAC,GAA2B,IAA1BI,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAC1B,EAA8BC,EAAAA,SAAeF,GAAtCG,EAAP,KAAgBC,EAAhB,KAOA,OACI,uBAAKX,UAAU,2BACX,uBACIA,UAAU,uBACVY,QATQ,SAACC,GACjBF,GAAYD,GACZF,GAAUE,IAQFI,KAAK,WACLC,SAAS,IACT,eAAcL,GAEd,uBAAKV,UAAU,oCACdU,GACG,uBAAKV,UAAU,4BAA4BN,QAAQ,aAC/C,4BAAUsB,OAAO,uBCKzC,EAzBqB,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAOT,EAAkB,EAAlBA,SAAUU,EAAQ,EAARA,GACpC,EAAoBT,EAAAA,SAAeQ,GAA5BE,EAAP,KAAWC,EAAX,KACMR,EAAU,SAACF,GACbU,GAAOD,GACPX,GAAUW,IAGd,OACI,uBAAKnB,UAAU,qBACX,yBACIqB,KAAK,WACLrB,UAAU,8BACVsB,KAAK,eACLJ,GAAE,eAAiBA,EACnBR,QAASS,EACTX,SAAU,SAACe,GAAD,OAAOX,EAAQW,EAAEnB,OAAOM,YAEtC,yBAAOV,UAAU,qCAAqCwB,QAAO,eAAiBN,GAC1E,wBAAMlB,UAAU,2BAA2ByB,MAAO,CAACC,WAAYP,EAAK,IAAM,QAC1E,wBAAMnB,UAAU,4BAA4ByB,MAAO,CAACE,MAAOR,EAAK,MAAQ,8BCsDxF,EAxEqB,SAAC,GAAwB,IAAvBpB,EAAsB,EAAtBA,OAAQS,EAAc,EAAdA,SAC3B,EAA4BC,EAAAA,SAAeV,GAApC6B,EAAP,KAAeC,EAAf,KACMjB,EAAU,SAACb,GACb8B,EAAU9B,GACVS,EAAST,IAEb,OACI,uBAAKC,UAAU,2BACX,uBACIA,UAAW9B,GAAAA,CACP,mBACA,yBACA,CACI,6BAAyC,SAAX0D,IAGtChB,QAAS,kBAAMA,EAAQ,SACvBE,KAAK,SACLC,SAAS,MAEb,uBACIf,UAAW9B,GAAAA,CACP,mBACA,0BACA,CACI,6BAAyC,UAAX0D,IAGtChB,QAAS,kBAAMA,EAAQ,UACvBE,KAAK,SACLC,SAAS,MAEb,uBACIf,UAAW9B,GAAAA,CACP,mBACA,yBACA,CACI,6BAAyC,SAAX0D,IAGtChB,QAAS,kBAAMA,EAAQ,SACvBE,KAAK,SACLC,SAAS,MAEb,uBACIf,UAAW9B,GAAAA,CACP,mBACA,0BACA,CACI,6BAAyC,UAAX0D,IAGtChB,QAAS,kBAAMA,EAAQ,UACvBE,KAAK,SACLC,SAAS,MAEb,uBACIf,UAAW9B,GAAAA,CACP,mBACA,yBACA,CACI,6BAAyC,SAAX0D,IAGtChB,QAAS,kBAAMA,EAAQ,SACvBE,KAAK,SACLC,SAAS,QCPzB,EApDe,SAAC,GAAiF,IAAhFe,EAA+E,EAA/EA,SAAUC,EAAqE,EAArEA,QAAqE,IAA5DhC,OAAAA,OAA4D,MAAnD,OAAmD,EAA3CiC,EAA2C,EAA3CA,oBAA2C,IAAtBC,SAAAA,OAAsB,SAC5F,EAAkDxB,EAAAA,WAAiBuB,GAA5DE,EAAP,KAA0BC,EAA1B,KAKA,EAAsC1B,EAAAA,WAAiBV,GAAhDqC,EAAP,KAAoBC,EAApB,KAKA,EAAwD5B,EAAAA,SAAA,cAA6BV,GAA9EuC,EAAP,KAA6BC,EAA7B,KACA9B,EAAAA,WAAgB,WACZ8B,EAAwB,cAAcxC,GACtCsC,EAAetC,KAChB,CAACA,IAEJ,MAA0CU,EAAAA,SAAewB,GAAlDO,EAAP,KAAsBC,EAAtB,KAKA,OACI,uBAAKzC,UAAU,iBACX,uBAAKA,UAAW9B,GAAAA,CAAW,aAAcoE,IACrC,gBAAC,EAAD,CAAMvC,OAAQqC,IACd,uBAAKpC,UAAU,yBACX,qBAAGA,UAAU,qCAAb,gBAA+D8B,GAC/D,qBAAG9B,UAAU,gCAA+B+B,MAAAA,OAAA,EAAAA,EAASW,QAAS,KAAMX,MAAAA,OAAxB,EAAwBA,EAASV,SAGrF,uBAAKrB,UAAU,aACX,uBAAKA,UAAU,YACX,uBAAKA,UAAU,sBACX,mDACA,gBAAC,EAAD,CAASE,YAAY,iCAAiCC,gBAAgB,sBAAsBF,YAd3F,kLAgBL,gBAAC,EAAD,CAAUM,UAAW2B,EAAmB1B,SAnCvB,SAACmC,GAC9BR,EAAqBQ,OAoCb,uBAAK3C,UAAU,YACX,yCACA,gBAAC,EAAD,CAAcD,OAAQqC,EAAa5B,SAlCvB,SAACmC,GACzBN,EAAeM,GACfJ,EAAwB,cAAcI,OAkC9B,uBAAK3C,UAAU,YACX,2CACA,gBAAC,EAAD,CAAckB,GAAIa,MAAAA,OAAF,EAAEA,EAASb,GAAID,MAAOuB,EAAehC,SA3B9C,SAACmC,GACpBF,EAAiBE,UCCzB,EA1BkB,WAChB,IACA,EAAgClC,EAAAA,SAAe,MAAxCmC,EAAP,KAAiBC,EAAjB,KAQA,OANApC,EAAAA,WAAgB,WACdqC,MAAM,6CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIL,EAAYK,QAC7B,IAGD,wBAAMlD,UAAU,cACd,wBAAMsB,KAAK,WAAW6B,QAAQ,0CAC9B,0CACA,sBAAInD,UAAU,uBAAd,uBAGA,uBAAKA,UAAU,uBACZ4C,MAAAA,OAAA,EAAAA,EAAUtE,SAAUsE,EAASQ,KAAI,SAACrB,EAASsB,GAC1C,OAAQ,gBAAC,EAAD,CAAQvB,SAlBP,WAkB2BC,QAASA,EAASb,GAAIa,MAAAA,OAAF,EAAEA,EAASb","sources":["webpack://greenspark-ui-task/./node_modules/classnames/index.js","webpack://greenspark-ui-task/./src/components/Logo.js","webpack://greenspark-ui-task/./src/components/Tooltip.js","webpack://greenspark-ui-task/./src/components/Checkbox.js","webpack://greenspark-ui-task/./src/components/ToggleSwitch.js","webpack://greenspark-ui-task/./src/components/ColourPicker.js","webpack://greenspark-ui-task/./src/components/Widget.js","webpack://greenspark-ui-task/./src/pages/index.js"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import * as React from 'react';\r\n\r\nconst svgImageWhite = <svg width=\"41\" height=\"46\" viewBox=\"0 0 41 46\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.7594 0.296997C11.8523 0.296997 4.63159 7.51767 4.63159 16.4248C4.63159 25.332 11.8523 32.5526 20.7594 32.5526C29.6666 32.5526 36.8872 25.332 36.8872 16.4248C36.8872 7.51767 29.6666 0.296997 20.7594 0.296997ZM21.7055 27.199C15.0821 27.647 9.98988 15.3899 12.3793 13.009C14.5591 10.837 15.4244 11.6134 15.8337 13.4321C16.0624 14.4477 15.8927 15.6938 15.7398 16.8168C15.6069 17.7927 15.4866 18.6756 15.6515 19.2334C16.0061 20.4331 16.6146 21.3839 17.3152 21.3164C18.0159 21.2489 19.1022 19.3642 16.7643 12.1573C15.0417 6.84704 19.6649 5.01134 20.0884 6.11656C20.2796 6.6155 20.0174 7.43242 19.7094 8.39211C19.3352 9.55832 18.8933 10.9354 19.115 12.2088C19.2964 13.251 19.4695 13.8299 19.6241 14.3469C19.8139 14.9814 19.9758 15.5226 20.0909 16.7129C20.1397 17.2168 20.1162 17.8618 20.0913 18.5473C20.0284 20.2787 19.956 22.2693 21.0136 22.9027C22.4899 23.7869 23.1374 19.4874 21.7159 11.7192C20.4394 4.74359 25.0207 6.89465 25.1415 9.00927C25.2624 11.1239 25.1284 14.3007 24.2738 18.7428C23.4193 23.185 24.0408 23.5508 25.1415 22.4336C26.2423 21.3164 26.3038 20.5267 25.6661 16.1227C25.2314 13.1211 29.9298 11.5922 29.4232 15.5363C28.9132 19.5063 26.6049 26.8676 21.7055 27.199Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M2.99764 45.7014C2.36168 45.7014 1.85472 45.5824 1.47675 45.3442C1.09878 45.1121 0.90979 44.7945 0.90979 44.3915C0.90979 43.9518 1.15277 43.5915 1.63874 43.3105C1.37476 43.1456 1.24277 42.9288 1.24277 42.6601C1.24277 42.5197 1.28176 42.3945 1.35976 42.2845C1.44375 42.1746 1.55474 42.0861 1.69273 42.0189C1.46475 41.854 1.29076 41.6433 1.17077 41.3868C1.05678 41.1303 0.999783 40.8494 0.999783 40.544C0.999783 40.2082 1.07178 39.9028 1.21577 39.628C1.35976 39.3471 1.56974 39.1272 1.84572 38.9684C2.1217 38.8035 2.44868 38.7211 2.82665 38.7211C3.22262 38.7211 3.5646 38.8188 3.85257 39.0142C3.95457 38.9593 4.08956 38.9135 4.25754 38.8768C4.43153 38.8341 4.61752 38.8127 4.8155 38.8127H5.03149L4.98656 39.2586C4.97119 39.4111 4.84282 39.5272 4.68955 39.5272H4.62652C4.52453 39.5272 4.44053 39.5303 4.37454 39.5364C4.55452 39.8173 4.64452 40.1532 4.64452 40.544C4.64452 40.8799 4.57252 41.1883 4.42853 41.4693C4.29054 41.7441 4.08356 41.9639 3.80758 42.1288C3.5316 42.2876 3.20462 42.367 2.82665 42.367C2.68866 42.367 2.52967 42.3456 2.34968 42.3029C2.28369 42.3334 2.25069 42.3823 2.25069 42.4494C2.25069 42.5288 2.29569 42.593 2.38568 42.6418C2.48167 42.6846 2.64066 42.7212 2.86265 42.7517L3.63659 42.8525C4.66851 42.993 5.18448 43.4357 5.18448 44.1808C5.18448 44.6449 4.98949 45.0144 4.59952 45.2892C4.21555 45.564 3.68159 45.7014 2.99764 45.7014ZM2.82665 41.5242C3.08463 41.5242 3.28262 41.4387 3.42061 41.2677C3.5646 41.0906 3.63659 40.8494 3.63659 40.544C3.63659 40.2387 3.5646 40.0005 3.42061 39.8295C3.28262 39.6524 3.08463 39.5639 2.82665 39.5639C2.56267 39.5639 2.35868 39.6524 2.21469 39.8295C2.0767 40.0005 2.00771 40.2387 2.00771 40.544C2.00771 40.8494 2.0767 41.0906 2.21469 41.2677C2.35868 41.4387 2.56267 41.5242 2.82665 41.5242ZM3.04263 44.8403C3.81058 44.8403 4.19455 44.648 4.19455 44.2632C4.19455 44.0922 4.12855 43.964 3.99656 43.8785C3.86457 43.7991 3.64559 43.735 3.33961 43.6861L2.34968 43.5395C2.00771 43.68 1.83672 43.8938 1.83672 44.1808C1.83672 44.4006 1.94171 44.5655 2.1517 44.6755C2.36168 44.7854 2.65866 44.8403 3.04263 44.8403Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M5.45425 38.8127H6.49817L6.52517 39.2982C6.65716 39.1455 6.82515 39.0112 7.02913 38.8951C7.23912 38.7791 7.4581 38.7211 7.68608 38.7211C7.75808 38.7211 7.82407 38.7272 7.88407 38.7394L7.80307 39.857C7.68908 39.8265 7.56009 39.8112 7.4161 39.8112C7.23012 39.8112 7.05913 39.857 6.90314 39.9486C6.74715 40.0341 6.63616 40.141 6.57016 40.2692V43.393H5.45425V38.8127Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M10.2336 43.4846C9.71164 43.4846 9.26467 43.3777 8.8927 43.164C8.52672 42.9441 8.25074 42.654 8.06476 42.2937C7.88477 41.9273 7.79478 41.5212 7.79478 41.0754C7.79478 40.6479 7.88177 40.257 8.05576 39.9028C8.22975 39.5486 8.48173 39.2677 8.8117 39.06C9.14168 38.8463 9.53465 38.7394 9.99062 38.7394C10.4106 38.7394 10.7646 38.828 11.0525 39.0051C11.3465 39.1822 11.5655 39.4203 11.7095 39.7196C11.8595 40.0188 11.9345 40.3547 11.9345 40.7273C11.9345 40.9105 11.9105 41.1181 11.8625 41.3502H8.95569C9.01569 41.7532 9.17168 42.0555 9.42366 42.2571C9.67564 42.4525 9.97862 42.5502 10.3326 42.5502C10.8186 42.5502 11.2685 42.425 11.6825 42.1746L11.7365 43.1365C11.5445 43.2403 11.3195 43.3258 11.0615 43.393C10.8096 43.454 10.5336 43.4846 10.2336 43.4846ZM10.8006 40.5807C10.8006 40.3425 10.7346 40.1318 10.6026 39.9486C10.4706 39.7654 10.2666 39.6738 9.99062 39.6738C9.71464 39.6738 9.49265 39.7562 9.32467 39.9211C9.15668 40.086 9.04269 40.3059 8.98269 40.5807H10.8006Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M14.6851 43.4846C14.1631 43.4846 13.7162 43.3777 13.3442 43.164C12.9782 42.9441 12.7023 42.654 12.5163 42.2937C12.3363 41.9273 12.2463 41.5212 12.2463 41.0754C12.2463 40.6479 12.3333 40.257 12.5073 39.9028C12.6813 39.5486 12.9332 39.2677 13.2632 39.06C13.5932 38.8463 13.9862 38.7394 14.4421 38.7394C14.8621 38.7394 15.2161 38.828 15.504 39.0051C15.798 39.1822 16.017 39.4203 16.161 39.7196C16.311 40.0188 16.386 40.3547 16.386 40.7273C16.386 40.9105 16.362 41.1181 16.314 41.3502H13.4072C13.4672 41.7532 13.6232 42.0555 13.8752 42.2571C14.1271 42.4525 14.4301 42.5502 14.7841 42.5502C15.2701 42.5502 15.72 42.425 16.134 42.1746L16.188 43.1365C15.996 43.2403 15.771 43.3258 15.513 43.393C15.2611 43.454 14.9851 43.4846 14.6851 43.4846ZM15.2521 40.5807C15.2521 40.3425 15.1861 40.1318 15.0541 39.9486C14.9221 39.7654 14.7181 39.6738 14.4421 39.6738C14.1661 39.6738 13.9442 39.7562 13.7762 39.9211C13.6082 40.086 13.4942 40.3059 13.4342 40.5807H15.2521Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M19.0556 38.7394C19.6136 38.7394 20.0366 38.9287 20.3245 39.3074C20.6125 39.686 20.7565 40.1959 20.7565 40.8372V43.393H19.6406V40.9288C19.6406 40.5013 19.5686 40.1868 19.4246 39.9852C19.2866 39.7776 19.0616 39.6738 18.7496 39.6738C18.4077 39.6738 18.1257 39.8051 17.9037 40.0677V43.393H16.7878V38.8127H17.8317L17.8497 39.1333C18.2277 38.8707 18.6297 38.7394 19.0556 38.7394Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M22.6712 43.4846C22.3832 43.4846 22.1192 43.4571 21.8792 43.4021C21.6453 43.3472 21.4023 43.2617 21.1503 43.1456L21.2493 42.1746C21.5013 42.3273 21.7352 42.4433 21.9512 42.5227C22.1732 42.596 22.4012 42.6327 22.6352 42.6327C23.0911 42.6327 23.3191 42.48 23.3191 42.1746C23.3191 42.0097 23.2591 41.8845 23.1391 41.799C23.0192 41.7074 22.8032 41.6006 22.4912 41.4784C22.0472 41.3135 21.7202 41.1273 21.5103 40.9196C21.3003 40.7059 21.1953 40.4188 21.1953 40.0585C21.1953 39.6616 21.3453 39.341 21.6453 39.0967C21.9452 38.8463 22.3502 38.7211 22.8602 38.7211C23.3701 38.7211 23.8351 38.8402 24.2551 39.0784L24.1561 40.0494C23.9281 39.8906 23.7121 39.7684 23.5081 39.6829C23.3101 39.5974 23.1001 39.5547 22.8782 39.5547C22.6862 39.5547 22.5362 39.5944 22.4282 39.6738C22.3262 39.7532 22.2752 39.8662 22.2752 40.0127C22.2752 40.1288 22.3052 40.2234 22.3652 40.2967C22.4312 40.37 22.5212 40.4372 22.6352 40.4982C22.7492 40.5532 22.9382 40.6326 23.2021 40.7364C23.6401 40.9074 23.9551 41.0967 24.1471 41.3044C24.3391 41.5059 24.4351 41.7777 24.4351 42.1197C24.4351 42.5533 24.2821 42.8891 23.9761 43.1273C23.6701 43.3655 23.2351 43.4846 22.6712 43.4846Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M27.1875 38.7394C27.6135 38.7394 27.9795 38.8463 28.2854 39.06C28.5914 39.2738 28.8224 39.5608 28.9784 39.9211C29.1344 40.2814 29.2124 40.6784 29.2124 41.112C29.2124 41.5456 29.1344 41.9426 28.9784 42.3029C28.8224 42.6632 28.5914 42.9502 28.2854 43.164C27.9795 43.3777 27.6135 43.4846 27.1875 43.4846C26.9175 43.4846 26.6865 43.454 26.4946 43.393C26.3086 43.338 26.1286 43.2464 25.9546 43.1182V45.2118V45.703H25.585C25.1728 45.703 24.8387 45.3689 24.8387 44.9567V38.8127H25.7386L25.8556 39.2341C26.0476 39.0692 26.2486 38.947 26.4586 38.8677C26.6686 38.7822 26.9115 38.7394 27.1875 38.7394ZM27.0165 42.5502C27.3465 42.5502 27.6045 42.4189 27.7905 42.1563C27.9765 41.8937 28.0694 41.5456 28.0694 41.112C28.0694 40.6784 27.9765 40.3303 27.7905 40.0677C27.6045 39.8051 27.3465 39.6738 27.0165 39.6738C26.6446 39.6738 26.3656 39.802 26.1796 40.0585C25.9936 40.315 25.9006 40.6662 25.9006 41.112C25.9006 41.5578 25.9936 41.909 26.1796 42.1655C26.3656 42.422 26.6446 42.5502 27.0165 42.5502Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M30.7806 43.4846C30.4087 43.4846 30.0967 43.3624 29.8447 43.1182C29.5987 42.8678 29.4757 42.5319 29.4757 42.1105C29.4757 41.7135 29.6167 41.396 29.8987 41.1578C30.1807 40.9135 30.5137 40.7425 30.8976 40.6448C31.2816 40.541 31.6506 40.483 32.0046 40.4708C31.9926 40.202 31.9236 40.0097 31.7976 39.8936C31.6776 39.7776 31.4766 39.7196 31.1946 39.7196C30.9966 39.7196 30.8016 39.7471 30.6097 39.802C30.4237 39.857 30.2077 39.9456 29.9617 40.0677L29.8627 39.1425C30.4087 38.8738 30.9546 38.7394 31.5006 38.7394C32.0285 38.7394 32.4305 38.886 32.7065 39.1791C32.9885 39.4723 33.1295 39.9394 33.1295 40.5807V41.8174C33.1295 42.0494 33.1385 42.2174 33.1565 42.3212C33.1805 42.4189 33.2165 42.483 33.2645 42.5136C33.3185 42.538 33.4054 42.5502 33.5254 42.5502H33.6694L33.5704 43.4846H33.1655C32.9195 43.4846 32.7125 43.4388 32.5445 43.3472C32.3765 43.2495 32.2475 43.1182 32.1575 42.9533C32.0135 43.1182 31.8156 43.2495 31.5636 43.3472C31.3176 43.4388 31.0566 43.4846 30.7806 43.4846ZM31.2486 42.6143C31.3626 42.6143 31.4916 42.5868 31.6356 42.5319C31.7796 42.4708 31.9056 42.3884 32.0135 42.2845V41.2402C31.6536 41.2586 31.3356 41.338 31.0596 41.4784C30.7836 41.6189 30.6456 41.8143 30.6456 42.0647C30.6456 42.254 30.6936 42.3945 30.7896 42.4861C30.8856 42.5716 31.0386 42.6143 31.2486 42.6143Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M34.0208 38.8127H35.0647L35.0917 39.2982C35.2237 39.1455 35.3917 39.0112 35.5957 38.8951C35.8057 38.7791 36.0247 38.7211 36.2527 38.7211C36.3247 38.7211 36.3906 38.7272 36.4506 38.7394L36.3696 39.857C36.2557 39.8265 36.1267 39.8112 35.9827 39.8112C35.7967 39.8112 35.6257 39.857 35.4697 39.9486C35.3137 40.0341 35.2027 40.141 35.1367 40.2692V43.393H34.0208V38.8127Z\" fill=\"#F9F9F9\"/>\r\n<path d=\"M36.8023 36.5226H37.9182V40.6906L39.3131 38.8127H40.573L38.9352 41.0112L40.609 43.393H39.3491L37.9182 41.3593V43.393H36.8023V36.5226Z\" fill=\"#F9F9F9\"/>\r\n</svg>;\r\n\r\nconst svgImageGreen = <svg width=\"41\" height=\"46\" viewBox=\"0 0 41 46\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.4362 0.296997C11.529 0.296997 4.30835 7.51767 4.30835 16.4248C4.30835 25.332 11.529 32.5526 20.4362 32.5526C29.3433 32.5526 36.564 25.332 36.564 16.4248C36.564 7.51767 29.3433 0.296997 20.4362 0.296997ZM21.3822 27.199C14.7589 27.647 9.66663 15.3899 12.056 13.009C14.2358 10.837 15.1011 11.6134 15.5105 13.4321C15.7391 14.4477 15.5694 15.6938 15.4165 16.8168C15.2836 17.7927 15.1634 18.6756 15.3283 19.2334C15.6828 20.4331 16.2914 21.3839 16.992 21.3164C17.6926 21.2489 18.7789 19.3642 16.4411 12.1573C14.7184 6.84704 19.3417 5.01134 19.7652 6.11656C19.9564 6.6155 19.6942 7.43242 19.3862 8.39211C19.0119 9.55832 18.57 10.9354 18.7917 12.2088C18.9732 13.251 19.1463 13.8299 19.3009 14.3469C19.4906 14.9814 19.6525 15.5226 19.7677 16.7129C19.8164 17.2168 19.793 17.8618 19.7681 18.5473C19.7051 20.2787 19.6328 22.2693 20.6904 22.9027C22.1667 23.7869 22.8142 19.4874 21.3926 11.7192C20.1161 4.74359 24.6974 6.89465 24.8183 9.00927C24.9392 11.1239 24.8051 14.3007 23.9506 18.7428C23.0961 23.185 23.7176 23.5508 24.8183 22.4336C25.919 21.3164 25.9805 20.5267 25.3428 16.1227C24.9082 13.1211 29.6065 11.5922 29.0999 15.5363C28.59 19.5063 26.2816 26.8676 21.3822 27.199Z\" fill=\"#3B755F\"/>\r\n<path d=\"M2.67439 45.7014C2.03844 45.7014 1.53148 45.5824 1.15351 45.3442C0.775534 45.1121 0.586548 44.7945 0.586548 44.3915C0.586548 43.9518 0.82953 43.5915 1.31549 43.3105C1.05151 43.1456 0.919523 42.9288 0.919523 42.6601C0.919523 42.5197 0.958521 42.3945 1.03651 42.2845C1.12051 42.1746 1.2315 42.0861 1.36949 42.0189C1.14151 41.854 0.96752 41.6433 0.847529 41.3868C0.733537 41.1303 0.676541 40.8494 0.676541 40.544C0.676541 40.2082 0.748536 39.9028 0.892525 39.628C1.03651 39.3471 1.2465 39.1272 1.52248 38.9684C1.79846 38.8035 2.12544 38.7211 2.50341 38.7211C2.89938 38.7211 3.24135 38.8188 3.52933 39.0142C3.63132 38.9593 3.76631 38.9135 3.9343 38.8768C4.10829 38.8341 4.29428 38.8127 4.49226 38.8127H4.70825L4.66331 39.2586C4.64795 39.4111 4.51958 39.5272 4.36631 39.5272H4.30328C4.20128 39.5272 4.11729 39.5303 4.05129 39.5364C4.23128 39.8173 4.32127 40.1532 4.32127 40.544C4.32127 40.8799 4.24928 41.1883 4.10529 41.4693C3.9673 41.7441 3.76032 41.9639 3.48434 42.1288C3.20836 42.2876 2.88138 42.367 2.50341 42.367C2.36542 42.367 2.20643 42.3456 2.02644 42.3029C1.96045 42.3334 1.92745 42.3823 1.92745 42.4494C1.92745 42.5288 1.97245 42.593 2.06244 42.6418C2.15843 42.6846 2.31742 42.7212 2.5394 42.7517L3.31335 42.8525C4.34527 42.993 4.86123 43.4357 4.86123 44.1808C4.86123 44.6449 4.66625 45.0144 4.27628 45.2892C3.89231 45.564 3.35834 45.7014 2.67439 45.7014ZM2.50341 41.5242C2.76139 41.5242 2.95937 41.4387 3.09736 41.2677C3.24135 41.0906 3.31335 40.8494 3.31335 40.544C3.31335 40.2387 3.24135 40.0005 3.09736 39.8295C2.95937 39.6524 2.76139 39.5639 2.50341 39.5639C2.23943 39.5639 2.03544 39.6524 1.89145 39.8295C1.75346 40.0005 1.68447 40.2387 1.68447 40.544C1.68447 40.8494 1.75346 41.0906 1.89145 41.2677C2.03544 41.4387 2.23943 41.5242 2.50341 41.5242ZM2.71939 44.8403C3.48734 44.8403 3.87131 44.648 3.87131 44.2632C3.87131 44.0922 3.80531 43.964 3.67332 43.8785C3.54133 43.7991 3.32235 43.735 3.01637 43.6861L2.02644 43.5395C1.68447 43.68 1.51348 43.8938 1.51348 44.1808C1.51348 44.4006 1.61847 44.5655 1.82846 44.6755C2.03844 44.7854 2.33542 44.8403 2.71939 44.8403Z\" fill=\"#3B755F\"/>\r\n<path d=\"M5.131 38.8127H6.17493L6.20193 39.2982C6.33392 39.1455 6.5019 39.0112 6.70589 38.8951C6.91587 38.7791 7.13486 38.7211 7.36284 38.7211C7.43483 38.7211 7.50083 38.7272 7.56083 38.7394L7.47983 39.857C7.36584 39.8265 7.23685 39.8112 7.09286 39.8112C6.90687 39.8112 6.73589 39.857 6.5799 39.9486C6.42391 40.0341 6.31292 40.141 6.24692 40.2692V43.393H5.131V38.8127Z\" fill=\"#3B755F\"/>\r\n<path d=\"M9.91036 43.4846C9.38839 43.4846 8.94143 43.3777 8.56945 43.164C8.20348 42.9441 7.9275 42.654 7.74152 42.2937C7.56153 41.9273 7.47153 41.5212 7.47153 41.0754C7.47153 40.6479 7.55853 40.257 7.73252 39.9028C7.9065 39.5486 8.15848 39.2677 8.48846 39.06C8.81844 38.8463 9.21141 38.7394 9.66737 38.7394C10.0873 38.7394 10.4413 38.828 10.7293 39.0051C11.0233 39.1822 11.2423 39.4203 11.3862 39.7196C11.5362 40.0188 11.6112 40.3547 11.6112 40.7273C11.6112 40.9105 11.5872 41.1181 11.5392 41.3502H8.63245C8.69245 41.7532 8.84844 42.0555 9.10042 42.2571C9.3524 42.4525 9.65538 42.5502 10.0093 42.5502C10.4953 42.5502 10.9453 42.425 11.3593 42.1746L11.4132 43.1365C11.2213 43.2403 10.9963 43.3258 10.7383 43.393C10.4863 43.454 10.2103 43.4846 9.91036 43.4846ZM10.4773 40.5807C10.4773 40.3425 10.4113 40.1318 10.2793 39.9486C10.1473 39.7654 9.94335 39.6738 9.66737 39.6738C9.39139 39.6738 9.16941 39.7562 9.00142 39.9211C8.83344 40.086 8.71944 40.3059 8.65945 40.5807H10.4773Z\" fill=\"#3B755F\"/>\r\n<path d=\"M14.3619 43.4846C13.8399 43.4846 13.3929 43.3777 13.021 43.164C12.655 42.9441 12.379 42.654 12.193 42.2937C12.013 41.9273 11.923 41.5212 11.923 41.0754C11.923 40.6479 12.01 40.257 12.184 39.9028C12.358 39.5486 12.61 39.2677 12.94 39.06C13.2699 38.8463 13.6629 38.7394 14.1189 38.7394C14.5389 38.7394 14.8928 38.828 15.1808 39.0051C15.4748 39.1822 15.6938 39.4203 15.8378 39.7196C15.9877 40.0188 16.0627 40.3547 16.0627 40.7273C16.0627 40.9105 16.0387 41.1181 15.9907 41.3502H13.084C13.144 41.7532 13.2999 42.0555 13.5519 42.2571C13.8039 42.4525 14.1069 42.5502 14.4609 42.5502C14.9468 42.5502 15.3968 42.425 15.8108 42.1746L15.8648 43.1365C15.6728 43.2403 15.4478 43.3258 15.1898 43.393C14.9378 43.454 14.6618 43.4846 14.3619 43.4846ZM14.9288 40.5807C14.9288 40.3425 14.8628 40.1318 14.7308 39.9486C14.5988 39.7654 14.3949 39.6738 14.1189 39.6738C13.8429 39.6738 13.6209 39.7562 13.4529 39.9211C13.2849 40.086 13.171 40.3059 13.111 40.5807H14.9288Z\" fill=\"#3B755F\"/>\r\n<path d=\"M18.7324 38.7394C19.2903 38.7394 19.7133 38.9287 20.0013 39.3074C20.2893 39.686 20.4333 40.1959 20.4333 40.8372V43.393H19.3173V40.9288C19.3173 40.5013 19.2453 40.1868 19.1014 39.9852C18.9634 39.7776 18.7384 39.6738 18.4264 39.6738C18.0844 39.6738 17.8025 39.8051 17.5805 40.0677V43.393H16.4645V38.8127H17.5085L17.5265 39.1333C17.9044 38.8707 18.3064 38.7394 18.7324 38.7394Z\" fill=\"#3B755F\"/>\r\n<path d=\"M22.3479 43.4846C22.06 43.4846 21.796 43.4571 21.556 43.4021C21.322 43.3472 21.079 43.2617 20.827 43.1456L20.926 42.1746C21.178 42.3273 21.412 42.4433 21.628 42.5227C21.85 42.596 22.078 42.6327 22.3119 42.6327C22.7679 42.6327 22.9959 42.48 22.9959 42.1746C22.9959 42.0097 22.9359 41.8845 22.8159 41.799C22.6959 41.7074 22.4799 41.6006 22.168 41.4784C21.724 41.3135 21.397 41.1273 21.187 40.9196C20.977 40.7059 20.872 40.4188 20.872 40.0585C20.872 39.6616 21.022 39.341 21.322 39.0967C21.622 38.8463 22.027 38.7211 22.5369 38.7211C23.0469 38.7211 23.5119 38.8402 23.9318 39.0784L23.8328 40.0494C23.6048 39.8906 23.3889 39.7684 23.1849 39.6829C22.9869 39.5974 22.7769 39.5547 22.5549 39.5547C22.3629 39.5547 22.2129 39.5944 22.105 39.6738C22.003 39.7532 21.952 39.8662 21.952 40.0127C21.952 40.1288 21.982 40.2234 22.042 40.2967C22.108 40.37 22.1979 40.4372 22.3119 40.4982C22.4259 40.5532 22.6149 40.6326 22.8789 40.7364C23.3169 40.9074 23.6318 41.0967 23.8238 41.3044C24.0158 41.5059 24.1118 41.7777 24.1118 42.1197C24.1118 42.5533 23.9588 42.8891 23.6528 43.1273C23.3469 43.3655 22.9119 43.4846 22.3479 43.4846Z\" fill=\"#3B755F\"/>\r\n<path d=\"M26.8643 38.7394C27.2902 38.7394 27.6562 38.8463 27.9622 39.06C28.2682 39.2738 28.4992 39.5608 28.6551 39.9211C28.8111 40.2814 28.8891 40.6784 28.8891 41.112C28.8891 41.5456 28.8111 41.9426 28.6551 42.3029C28.4992 42.6632 28.2682 42.9502 27.9622 43.164C27.6562 43.3777 27.2902 43.4846 26.8643 43.4846C26.5943 43.4846 26.3633 43.454 26.1713 43.393C25.9853 43.338 25.8053 43.2464 25.6314 43.1182V45.2118V45.703H25.2617C24.8496 45.703 24.5154 45.3689 24.5154 44.9567V38.8127H25.4154L25.5324 39.2341C25.7244 39.0692 25.9253 38.947 26.1353 38.8677C26.3453 38.7822 26.5883 38.7394 26.8643 38.7394ZM26.6933 42.5502C27.0233 42.5502 27.2812 42.4189 27.4672 42.1563C27.6532 41.8937 27.7462 41.5456 27.7462 41.112C27.7462 40.6784 27.6532 40.3303 27.4672 40.0677C27.2812 39.8051 27.0233 39.6738 26.6933 39.6738C26.3213 39.6738 26.0423 39.802 25.8563 40.0585C25.6704 40.315 25.5774 40.6662 25.5774 41.112C25.5774 41.5578 25.6704 41.909 25.8563 42.1655C26.0423 42.422 26.3213 42.5502 26.6933 42.5502Z\" fill=\"#3B755F\"/>\r\n<path d=\"M30.4574 43.4846C30.0854 43.4846 29.7734 43.3624 29.5215 43.1182C29.2755 42.8678 29.1525 42.5319 29.1525 42.1105C29.1525 41.7135 29.2935 41.396 29.5755 41.1578C29.8574 40.9135 30.1904 40.7425 30.5744 40.6448C30.9584 40.541 31.3273 40.483 31.6813 40.4708C31.6693 40.202 31.6003 40.0097 31.4743 39.8936C31.3543 39.7776 31.1533 39.7196 30.8714 39.7196C30.6734 39.7196 30.4784 39.7471 30.2864 39.802C30.1004 39.857 29.8844 39.9456 29.6385 40.0677L29.5395 39.1425C30.0854 38.8738 30.6314 38.7394 31.1773 38.7394C31.7053 38.7394 32.1073 38.886 32.3833 39.1791C32.6652 39.4723 32.8062 39.9394 32.8062 40.5807V41.8174C32.8062 42.0494 32.8152 42.2174 32.8332 42.3212C32.8572 42.4189 32.8932 42.483 32.9412 42.5136C32.9952 42.538 33.0822 42.5502 33.2022 42.5502H33.3462L33.2472 43.4846H32.8422C32.5962 43.4846 32.3893 43.4388 32.2213 43.3472C32.0533 43.2495 31.9243 43.1182 31.8343 42.9533C31.6903 43.1182 31.4923 43.2495 31.2403 43.3472C30.9944 43.4388 30.7334 43.4846 30.4574 43.4846ZM30.9254 42.6143C31.0394 42.6143 31.1683 42.5868 31.3123 42.5319C31.4563 42.4708 31.5823 42.3884 31.6903 42.2845V41.2402C31.3303 41.2586 31.0124 41.338 30.7364 41.4784C30.4604 41.6189 30.3224 41.8143 30.3224 42.0647C30.3224 42.254 30.3704 42.3945 30.4664 42.4861C30.5624 42.5716 30.7154 42.6143 30.9254 42.6143Z\" fill=\"#3B755F\"/>\r\n<path d=\"M33.6976 38.8127H34.7415L34.7685 39.2982C34.9005 39.1455 35.0685 39.0112 35.2725 38.8951C35.4824 38.7791 35.7014 38.7211 35.9294 38.7211C36.0014 38.7211 36.0674 38.7272 36.1274 38.7394L36.0464 39.857C35.9324 39.8265 35.8034 39.8112 35.6594 39.8112C35.4734 39.8112 35.3025 39.857 35.1465 39.9486C34.9905 40.0341 34.8795 40.141 34.8135 40.2692V43.393H33.6976V38.8127Z\" fill=\"#3B755F\"/>\r\n<path d=\"M36.4791 36.5226H37.595V40.6906L38.9899 38.8127H40.2498L38.6119 41.0112L40.2858 43.393H39.0259L37.595 41.3593V43.393H36.4791V36.5226Z\" fill=\"#3B755F\"/>\r\n</svg>;\r\n\r\n\r\nconst Logo = ({colour}) => {\r\n    return (\r\n        <div className='gs__widget__logo__container'>\r\n            {(colour === 'green' || colour === 'blue' || colour === 'dark') && svgImageWhite}\r\n            {(colour === 'white' || colour === 'bege') && svgImageGreen}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n","import * as React from 'react';\r\n\r\nconst Tooltip = ({tooltipText, tooltipLink, tooltipLinkText}) => {\r\n    return( \r\n        <div className='gs__tooltip'>\r\n            <svg width=\"12\" height=\"13\" viewBox=\"0 0 12 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M5.5 9.47363H6.5V6.47363H5.5V9.47363ZM6 1.97363C3.24 1.97363 1 4.21363 1 6.97363C1 9.73363 3.24 11.9736 6 11.9736C8.76 11.9736 11 9.73363 11 6.97363C11 4.21363 8.76 1.97363 6 1.97363ZM6 10.9736C3.795 10.9736 2 9.17863 2 6.97363C2 4.76863 3.795 2.97363 6 2.97363C8.205 2.97363 10 4.76863 10 6.97363C10 9.17863 8.205 10.9736 6 10.9736ZM5.5 5.47363H6.5V4.47363H5.5V5.47363Z\" fill=\"#3B755F\"/>\r\n                <path d=\"M5.5 4.47363H6.5V5.47363H5.5V4.47363ZM5.5 6.47363H6.5V9.47363H5.5V6.47363Z\" fill=\"#3B755F\"/>\r\n                <path d=\"M6 1.97363C3.24 1.97363 1 4.21363 1 6.97363C1 9.73363 3.24 11.9736 6 11.9736C8.76 11.9736 11 9.73363 11 6.97363C11 4.21363 8.76 1.97363 6 1.97363ZM6 10.9736C3.795 10.9736 2 9.17863 2 6.97363C2 4.76863 3.795 2.97363 6 2.97363C8.205 2.97363 10 4.76863 10 6.97363C10 9.17863 8.205 10.9736 6 10.9736Z\" fill=\"#3B755F\"/>\r\n            </svg>\r\n\r\n            {/* <img src={tooltip} alt='tooltip icon' className='gs__tooltip__image'/> */}\r\n            <div className=\"gs__tooltip__container\">\r\n                <p className=\"gs__tooltip__text\">{tooltipText}</p>\r\n                <a target=\"_blank\" rel=\"noreferrer\" href={tooltipLink} className='gs__tooltip__text__link'>{tooltipLinkText}</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tooltip;\r\n","import * as React from 'react';\r\n\r\nconst Checkbox = ({isChecked, onChange}) => {\r\n    const [checked, setChecked] = React.useState(isChecked);\r\n\r\n    const handleEvent = (event) => {\r\n        setChecked(!checked);\r\n        onChange(!checked);\r\n    }\r\n\r\n    return (\r\n        <div className='gs__checkbox__container'>\r\n            <div\r\n                className='gs__checkbox__styled'\r\n                onClick={handleEvent}\r\n                role=\"checkbox\"\r\n                tabIndex=\"0\"\r\n                aria-checked={checked}\r\n            >\r\n                <div className='gs__checkbox__container__shadow' />\r\n                {checked && (\r\n                    <svg className='gs__checkbox__styled__svg' viewBox=\"0 0 24 24\">\r\n                        <polyline points=\"20 6 9 17 4 12\" />\r\n                    </svg>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox;\r\n","import * as React from 'react';\r\n\r\nconst ToggleSwitch = ({value, onChange, id}) => {\r\n    const [on, setOn] = React.useState(value);\r\n    const onClick = (checked) => {\r\n        setOn(!on);\r\n        onChange(!on);\r\n    }\r\n\r\n    return (\r\n        <div className=\"gs__toggle-switch\">\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"gs__toggle-switch__checkbox\"\r\n                name=\"toggleSwitch\"\r\n                id={`toggleSwitch${id}`}\r\n                checked={on}\r\n                onChange={(e) => onClick(e.target.checked)}\r\n            />\r\n            <label className=\"gs__toggle-switch__checkbox__label\" htmlFor={`toggleSwitch${id}`}>\r\n                <span className=\"gs__toggle-switch__inner\" style={{marginLeft: on ? '0' : null}}></span>\r\n                <span className=\"gs__toggle-switch__switch\" style={{right: on ? '0px' : null}}></span>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleSwitch;\r\n","import * as React from 'react';\r\nimport classNames from 'classnames';\r\n// 'gs__items__color gs__items__color--blue'\r\nconst ColourPicker = ({colour, onChange}) => {\r\n    const [picker, setPicker] = React.useState(colour);\r\n    const onClick = (colour) => {\r\n        setPicker(colour);\r\n        onChange(colour);\r\n    }\r\n    return(\r\n        <div className='gs__items__color-picker'>\r\n            <div \r\n                className={classNames(\r\n                    'gs__items__color',\r\n                    'gs__items__color--blue',\r\n                    {\r\n                        'gs__items__color--selected': picker === 'blue'\r\n                    }\r\n                )}\r\n                onClick={() => onClick('blue')}\r\n                role=\"button\"\r\n                tabIndex=\"0\"\r\n            />\r\n            <div \r\n                className={classNames(\r\n                    'gs__items__color',\r\n                    'gs__items__color--green',\r\n                    {\r\n                        'gs__items__color--selected': picker === 'green'\r\n                    }\r\n                )}\r\n                onClick={() => onClick('green')}\r\n                role=\"button\"\r\n                tabIndex=\"0\"\r\n            />\r\n            <div \r\n                className={classNames(\r\n                    'gs__items__color',\r\n                    'gs__items__color--bege',\r\n                    {\r\n                        'gs__items__color--selected': picker === 'bege'\r\n                    }\r\n                )}\r\n                onClick={() => onClick('bege')}\r\n                role=\"button\"\r\n                tabIndex=\"0\"\r\n            />\r\n            <div \r\n                className={classNames(\r\n                    'gs__items__color',\r\n                    'gs__items__color--white',\r\n                    {\r\n                        'gs__items__color--selected': picker === 'white'\r\n                    }\r\n                )}\r\n                onClick={() => onClick('white')}\r\n                role=\"button\"\r\n                tabIndex=\"0\"\r\n            />\r\n            <div \r\n                className={classNames(\r\n                    'gs__items__color',\r\n                    'gs__items__color--dark',\r\n                    {\r\n                        'gs__items__color--selected': picker === 'dark'\r\n                    }\r\n                )}\r\n                onClick={() => onClick('dark')}\r\n                role=\"button\"\r\n                tabIndex=\"0\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColourPicker;","import * as React from 'react';\r\nimport Logo from './Logo';\r\nimport Tooltip from './Tooltip';\r\nimport Checkbox from './Checkbox';\r\nimport ToggleSwitch from './ToggleSwitch';\r\nimport ColourPicker from './ColourPicker';\r\nimport classNames from 'classnames';\r\n\r\nimport './styles.scss'\r\n\r\nconst Widget = ({typeVerb, product, colour = 'blue', isLinkPublicProfile, isActive = false}) => {\r\n    const [linkPublicProfile, setLinkPublicProfile] = React.useState(!!isLinkPublicProfile);\r\n    const onSetPublicProfileChange = (newValue) => {\r\n        setLinkPublicProfile(newValue);\r\n    }\r\n\r\n    const [badgeColour, setBadgeColour] = React.useState(!!colour);\r\n    const onBadgeColourChange = (newValue) => {\r\n        setBadgeColour(newValue);\r\n        setBadgeColourClassName(`gs__widget-${newValue}`);\r\n    }\r\n    const [badgeColourClassName, setBadgeColourClassName] = React.useState(`gs__widget-${colour}`);\r\n    React.useEffect(() => {\r\n        setBadgeColourClassName(`gs__widget-${colour}`);\r\n        setBadgeColour(colour);\r\n    }, [colour]);\r\n\r\n    const [isActiveBadge, setIsActiveBadge] = React.useState(isActive);\r\n    const onActiveChange = (newValue) => {\r\n        setIsActiveBadge(newValue);\r\n    };\r\n    const tootltipText = 'This widget links directly to your public profile so that you can easily share your impact with your customers. Turn it off here if you do not want the badge to link to it.';\r\n    return (\r\n        <div className='gs__container'>\r\n            <div className={classNames(\"gs__widget\", badgeColourClassName)}>\r\n                <Logo colour={badgeColour} />\r\n                <div className='gs__widget__container'>\r\n                    <p className='gs__widget__container__text-title'>This product {typeVerb}</p>\r\n                    <p className='gs__widget__container__text'>{product?.amount + ' ' + product?.type}</p>\r\n                </div>\r\n            </div>\r\n            <div className='gs__items'>\r\n                <div className='gs__item'>\r\n                    <div className='gs__items__tooltip'>\r\n                        <p>Link to Public profile</p>\r\n                        <Tooltip tooltipLink='https://www.getgreenspark.com/' tooltipLinkText=\"View Public Profile\" tooltipText={tootltipText}/>\r\n                    </div>\r\n                    <Checkbox isChecked={linkPublicProfile} onChange={onSetPublicProfileChange}/>\r\n                </div>\r\n                <div className='gs__item'>\r\n                    <p>Badge colour</p>\r\n                    <ColourPicker colour={badgeColour} onChange={onBadgeColourChange} />\r\n                </div>\r\n                <div className='gs__item'>\r\n                    <p>Activate badge</p>\r\n                    <ToggleSwitch id={product?.id} value={isActiveBadge} onChange={onActiveChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widget;","import * as React from \"react\"\nimport './styles.scss';\nimport Widget from '../components/Widget'\n\nconst IndexPage = () => {\n  const typeVerb = 'collects';\n  const [products, setProducts] = React.useState(null)\n\n  React.useEffect(() => {\n    fetch('https://getgreenspark.mocklab.io/products')\n        .then(response => response.json())\n        .then(data => setProducts(data));\n  }, [])\n\n  return (\n    <main className=\"main__page\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></meta>\n      <title>Home Page</title>\n      <h1 className=\"main__page__heading\">\n        Per product widgets\n        </h1>\n      <div className=\"widgets__container\">\n        {products?.length && products.map((product, index) => {\n          return (<Widget typeVerb={typeVerb} product={product} id={product?.id} />)\n        })}\n      </div>\n    </main>\n  )\n}\n\nexport default IndexPage\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","svgImageWhite","width","height","viewBox","fill","xmlns","d","svgImageGreen","colour","className","tooltipText","tooltipLink","tooltipLinkText","target","rel","href","isChecked","onChange","React","checked","setChecked","onClick","event","role","tabIndex","points","value","id","on","setOn","type","name","e","htmlFor","style","marginLeft","right","picker","setPicker","typeVerb","product","isLinkPublicProfile","isActive","linkPublicProfile","setLinkPublicProfile","badgeColour","setBadgeColour","badgeColourClassName","setBadgeColourClassName","isActiveBadge","setIsActiveBadge","amount","newValue","products","setProducts","fetch","then","response","json","data","content","map","index"],"sourceRoot":""}